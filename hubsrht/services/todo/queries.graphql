query GetTrackers($cursor: Cursor) {
  me {
    trackers(cursor: $cursor) {
      results {
        ... trackerDetails
      }
      cursor
    }
  }
}

query GetTracker($trackerName: String!) {
  me {
    tracker(name: $trackerName) {
      ... trackerDetails
    }
  }
}

mutation CreateTracker(
  $name: String!,
  $description: String!,
  $visibility: Visibility!,
) {
  tracker: createTracker(
    name: $name,
    description: $description,
    visibility: $visibility,
  ) {
    ... trackerDetails
  }
}

fragment trackerDetails on Tracker {
  id
  name
  description
  visibility
  updated

  defaultACL {
    browse
  }

  owner {
    __typename
    canonicalName
  }
}

mutation DeleteTracker($trackerId: Int!) {
  deleteTracker(id: $trackerId) { id }
}

query GetTicketComments(
  $username: String!,
  $tracker: String!,
  $ticketId: Int!,
) {
  user(username: $username) {
    tracker(name: $tracker) {
      id

      ticket(id: $ticketId) {
        id

        events {
          results {
            changes {
              ... on Comment {
                text
              }
            }
          }
        }
      }
    }
  }
}

mutation SubmitComment(
  $trackerId: Int!,
  $ticketId: Int!,
  $comment: SubmitCommentInput!
) {
  submitComment(
    trackerId: $trackerId,
    ticketId: $ticketId,
    input: $comment,
  ) { id }
}

mutation CreateUserWebhook(
  $payload: String!
  $url: String!,
) {
  webhook: createUserWebhook(config: {
    url: $url,
    events: [
      TRACKER_UPDATE
      TRACKER_DELETED
    ],
    query: $payload
  }) { id }
}

mutation DeleteUserWebhook($id: Int!) {
  deleteUserWebhook(id: $id) { id }
}

mutation CreateTrackerWebhook(
  $trackerId: Int!,
  $payload: String!,
  $url: String!,
) {
  webhook: createTrackerWebhook(trackerId: $trackerId, config: {
    url: $url,
    events: [
      TICKET_CREATED,
      EVENT_CREATED,
    ],
    query: $payload,
  }) { id }
}

mutation DeleteTrackerWebhook($id: Int!) {
  deleteTrackerWebhook(id: $id) { id }
}

query EventWebhook {
  webhook {
    uuid
    event
    date

    ... on TrackerEvent {
      tracker {
        id
        name
        description
        visibility
      }
    }

    ... on TicketEvent {
      ticket {
        id
        subject

        tracker {
          id
          name
        }

        submitter {
          canonicalName

          ... on User {
            username
          }

          ... on EmailAddress {
            mailbox
            name
          }

          ... on ExternalUser {
            externalId
            externalUrl
          }
        }
      }
    }

    ... on EventCreated {
      newEvent {
        ticket {
          id
          subject

          tracker {
            id
          }
        }

        changes {
          eventType

          ... on Comment {
            author {
              canonicalName

              ... on User {
                username
              }

              ... on EmailAddress {
                mailbox
                name
              }

              ... on ExternalUser {
                externalId
                externalUrl
              }
            }
          }
        }
      }
    }
  }
}
